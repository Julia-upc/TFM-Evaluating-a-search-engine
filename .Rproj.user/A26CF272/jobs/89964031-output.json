[1,"=> library(shiny); runApp('example_counter.R')\n\n"]
[2,"\nAttaching package: ‘lubridate’\n\nThe following objects are masked from ‘package:base’:\n\n    date, intersect, setdiff, union\n\n"]
[2,"\nAttaching package: ‘shinydashboard’\n\nThe following object is masked from ‘package:graphics’:\n\n    box\n\n"]
[2,"Error:\n! Operation not allowed without an active reactive context.\n• You tried to do something that can only be done from inside a reactive consumer.\nBacktrace:\n     ▆\n  1. └─shiny::runApp(\"example_counter.R\")\n  2.   ├─shiny::as.shiny.appobj(appDir)\n  3.   └─shiny:::as.shiny.appobj.character(appDir)\n  4.     └─shiny::shinyAppFile(x)\n  5.       └─shiny:::shinyAppDir_appR(basename(appFile), appDir, options = options)\n  6.         └─shiny appObj()\n  7.           └─shiny func(fname, ...)\n  8.             └─shiny:::sourceUTF8(fullpath, envir = new.env(parent = sharedEnv))\n  9.               └─base::eval(exprs, envir)\n 10.                 └─base::eval(exprs, envir)\n 11.                   ├─shiny::..stacktraceon..(...)\n 12.                   ├─shiny::basicPage(...)\n 13.                   │ ├─shiny::bootstrapPage(div(class = \"container-fluid\", list(...)))\n 14.                   │ │ └─rlang::list2(...)\n 15.                   │ └─htmltools::div(class = \"container-fluid\", list(...))\n 16.                   │   └─rlang::dots_list(...)\n 17.                   └─shiny autoInvalidate()\n 18.                     └─shiny:::getCurrentContext()\n 19.                       └─.getReactiveEnvironment()$currentContext()\n 20.                         └─rlang::abort(...)\nEjecución interrumpida\n"]
[1,"\nShiny application failed (exit status 1).\n\n"]
